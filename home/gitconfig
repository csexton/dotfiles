[user]
	name = Christopher Sexton
	email = csexton@users.noreply.github.com
[color]
	diff = auto
	status = auto
	branch = auto
	ui = auto
[core]
	excludesfile = /Users/csexton/.gitignore
[alias]
	br = branch
	bro = browse
	browse = !git-browse
	action = !git-action
	c = commit --verbose
	cleanup = !~/bin/git-cleanup-merged-branches
	cm = commit --verbose
	co = checkout
	ctags = !.git/hooks/ctags
	delete-old-branches = !git branch | grep -v \"*\" | xargs git branch -d 2>/dev/null
	delete-old-branches-remote = !git remote prune $1 && git branch | grep -v \"*\" | xargs git branch -d 2>/dev/null
	df = diff
	edit = "!vim `git ls-files -m`"
	input = read name && echo $name
	lg = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'
	ll = log --pretty=oneline --abbrev-commit --graph --decorate
	lol = log --graph --pretty=format:'%C(red)%h%C(reset) %C(yellow)%d%C(reset)%s %C(green)%an %C(bold black)%cr%C(reset)' --abbrev-commit --date=relative
	ocmmit = commit --verbose
	oops = reset --soft "HEAD^"
	pr = "!f() { git fetch origin pull/$1/head:pr-$1 && git checkout pr-$1; }; f"
	ready = rebase -i @{u}
	siff = diff --submodule
	st = status
	standup = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cD) %C(bold blue)%an%Creset' --since yesterday --author csexton
	sup = submodule update
	sweep = !git-sweep
	tags = log -n1 --pretty=format:%h%d
	unadd = reset HEAD
	workprofile = config user.email \"chris@radiusnetworks.com\"
	vim = "!git log --graph --pretty=format:'%h - %d %s (%cr) <%an>' | vim -R -c 'set filetype=git nowrap' -"
	lal = log --graph --pretty=format:'%C(red)%h%C(reset) %C(yellow)%d%C(reset)%s %C(green)%an %C(bold black)%cr%C(reset)' --abbrev-commit --date=relative
	praise = blame
	prune-tags = fetch --prune origin "+refs/tags/*:refs/tags/*"

[github]
	user = csexton
[merge]
	summary = true
[push]
	default = current
[diff "ruby"]
	funcname = ^ *\\(\\(class\\|module\\|def\\) .*\\)
[diff]
	algorithm = patience
[color "diff"]
	whitespace = red reverse
[heroku]
	account = radius
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[commit]
	verbose = true
	template = /Users/csexton/.git_template/commit.txt
